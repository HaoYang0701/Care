9/2/18

9am - 9:30AM : Took a look at diff libraries - twilio, webrtc.
WebRTC is Chrome + Android + Firefox + Opera + Java & Obj-C binding


6pm - 10pm

https://www.youtube.com/watch?v=p2HzZkd2A40

Create and initialize PeerConnectionFactory
Create a VideoCapturer instance which uses the camera of the device
Create a VideoSource from the Capturer
Create a VideoTrack from the source
Create a video renderer using a SurfaceViewRenderer view and add it to the VideoTrack instance

NATs block the UDP/TCP audio/video streams. This is why we need a STUN server to expose the public ip



9/3

4pm - 7:42pm
Alternative in case this does not work .  Videochatguru

Did the node js portion

req -x509 -newkey rsa:4096 -sha256 -nodes -keyout key.pem -out cert.pem -subj "/CN=localhost" -days 3650


9/5

5:30 - 7:50pm
Node js hosting to see if this works
https://hidden-hollows-28924.herokuapp.com/

9/10 
6:30pm - 11pm

Ran through quick twilio tut to implement their SDK
Implemented SDK
Figured out the API keys, account sid, secret key and how to get access tokens (this might need to go on the server in the future)


9/11

6:00 - 9:20pm

Seems like we need a java backend server to actually give us the auth token. the library does not work with android.
https://codelabs.developers.google.com/codelabs/cloud-app-engine-springboot/index.html?index=..%2F..%2Findex#1

http://care-216123.appspot.com/


9:00 - 10
12 - 2:30

started server side token code


8pm - 12: 40pm

curl https://start.spring.io/starter.tgz -d packaging=war \ -d dependencies=web -d baseDir=gae-standard-example | tar -xzvf -


import org.springframework.web.bind.annotation.*;
@GetMapping("/")

/home/yang_hao0701/gae-standard-example/mvnw



import org.springframework.boot.builder.SpringApplicationBuilder;
import org.springframework.boot.web.servlet.support.SpringBootServletInitializer;
public class ServletInitializer extends SpringBootServletInitializer {
        @Override
        protected SpringApplicationBuilder configure(SpringApplicationBuilder application) {
                return application.sources(DemoApplication.class);
        }
}





import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.web.bind.annotation.*;
@SpringBootApplication
@RestController
public class DemoApplication {
        public static void main(String[] args) {
                SpringApplication.run(DemoApplication.class, args);
        }
    @GetMapping("/")
    public String hello() {
        return "hello world";
    }
}

http://care-216403.appspot.com/token
IT WORKSSSS



9/18 

6pm - 9:30 
Finished up video and connected it with web app. Will need to add security to webapp later, but it works great.
